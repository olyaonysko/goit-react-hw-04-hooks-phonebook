{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","resetForm","preventDefault","Number","isNaN","toast","info","form","label","type","input","placeholder","onChange","button","ContactList","contacts","onDeleteContact","list","map","id","listItem","onClick","Filter","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","shortid","generate","toLowerCase","includes","console","log","prevState","length","normalizedFilter","getVisibleContacts","contactId","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,uCCA9BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,uD,0JCInHC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAEH,UAAlB,SAA8BC,K,gBCGjB,SAASG,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAAY,EACxBC,mBAAS,IADe,mBACzCC,EADyC,KACnCC,EADmC,OAEpBF,mBAAS,IAFW,mBAEzCG,EAFyC,KAEjCC,EAFiC,KAI1CC,EAAe,SAAAC,GAAU,IAAD,EACJA,EAAMC,cAAtBN,EADoB,EACpBA,KAAMO,EADc,EACdA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAqBAC,EAAY,WAChBP,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAML,SAvBa,SAAAO,GACnBA,EAAMI,iBAEDT,GAASE,EAKVQ,OAAOC,OAAOT,GAChBU,IAAMC,KAAK,mDAIbf,EAASE,EAAME,GACfM,KAVEI,IAAMC,KAAK,4CAmBiBlB,UAAWC,IAAEkB,KAA3C,UACE,wBAAOnB,UAAWC,IAAEmB,MAApB,iBAEE,uBACEC,KAAK,OACLhB,KAAK,OACLL,UAAWC,IAAEqB,MACbC,YAAY,aACZX,MAAOP,EACPmB,SAAUf,OAGd,wBAAOT,UAAWC,IAAEmB,MAApB,mBAEE,uBACEC,KAAK,MACLhB,KAAK,SACLL,UAAWC,IAAEqB,MACbC,YAAY,qBACZX,MAAOL,EACPiB,SAAUf,OAGd,wBAAQY,KAAK,SAASrB,UAAWC,IAAEwB,OAAnC,4B,oBCvCSC,EA9BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,oBAAI5B,UAAWC,IAAE4B,KAAjB,SACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAI1B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAaP,UAAWC,IAAE+B,SAA1B,UACE,8BACG3B,EADH,KACWE,KAEX,wBACEc,KAAK,SACLrB,UAAWC,IAAEwB,OACbQ,QAAS,kBAAML,EAAgBG,IAHjC,sBAJOA,S,iBCeAG,EAlBA,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAOY,EAAV,EAAUA,SAAV,OACb,wBAAOxB,UAAWC,IAAEmB,MAApB,kCAEE,uBACEC,KAAK,OACLrB,UAAWC,IAAEqB,MACbC,YAAY,aACZX,MAAOA,EACPY,SAAU,gBAAGb,EAAH,EAAGA,cAAH,OAAuBa,EAASb,EAAcC,cCF/C,SAASuB,IAAO,IAAD,EACI/B,oBAAS,WAAO,IAAD,EAC7C,iBAAOgC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA9C,QAA8D,MAFpC,mBACrBb,EADqB,KACXc,EADW,OAIArC,mBAAS,IAJT,mBAIrBsC,EAJqB,KAIbC,EAJa,KAM5BC,qBAAU,WACRL,aAAaM,QAAQ,WAAYT,KAAKU,UAAUnB,MAC/C,CAACA,IAqCJ,OACE,eAAC,EAAD,WACE,2CACA,cAACzB,EAAD,CAAaC,SAtCE,SAACE,EAAME,GACxB,IAAMwC,EAAU,CACdhB,GAAIiB,IAAQC,WACZ5C,OACAE,UAGF,GACEoB,EACGG,KAAI,SAAAiB,GAAO,OAAIA,EAAQ1C,KAAK6C,iBAC5BC,SAAS9C,EAAK6C,eAGjB,OADAE,QAAQC,IAAI,QACLpC,IAAMC,KAAN,uBAAiBb,EAAjB,6BAEPoC,GAAY,SAAAa,GAAS,OAAKP,GAAL,mBAAiBO,UAwBtC,0CAEC3B,EAAS4B,OAAS,GAAK,cAAC,EAAD,CAAQ3C,MAAO8B,EAAQlB,SAlB9B,SAAAkB,GACnBC,EAAUD,MAmBPf,EAAS4B,OAAS,EACjB,cAAC,EAAD,CACE5B,SAlBmB,WACzB,IAAM6B,EAAmBd,EAAOQ,cAEhC,OAAOvB,EAASe,QAAO,SAAAK,GAAO,OAC5BA,EAAQ1C,KAAK6C,cAAcC,SAASK,MActBC,GACV7B,gBA3Bc,SAAA8B,GACpBjB,EAAYd,EAASe,QAAO,SAAAK,GAAO,OAAIA,EAAQhB,KAAO2B,SA6BlD,sEAEF,cAAC,IAAD,CAAgBC,UAAW,SCjEjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3B,EAAD,MAEF4B,SAASC,eAAe,U,kBCR1BpE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,OAAS,+B","file":"static/js/main.ecf9d80b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__cZc1n\",\"input\":\"Filter_input__2ZAAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__39OX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1PyFq\",\"label\":\"ContactForm_label__kNPnL\",\"input\":\"ContactForm_input__3i3Zv\",\"button\":\"ContactForm_button__2KmPG ContactForm_input__3i3Zv\"};","import s from './Container.module.css';\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nexport default Container;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!name || !number) {\n      toast.info('ðŸ‘º All fields must be filled!');\n      return;\n    }\n\n    if (Number.isNaN(+number)) {\n      toast.info('ðŸ‘º Telephone number must be numeric!');\n      return;\n    }\n\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={s.input}\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={s.input}\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.listItem}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          className={s.button}\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input\n      type=\"text\"\n      className={s.input}\n      placeholder=\"Enter name\"\n      value={value}\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (\n      contacts\n        .map(contact => contact.name.toLowerCase())\n        .includes(name.toLowerCase())\n    ) {\n      console.log('work');\n      return toast.info(`ðŸ™„ ${name} is already in contacts!`);\n    } else {\n      setContacts(prevState => [contact, ...prevState]);\n    }\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = filter => {\n    setFilter(filter);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n\n      {contacts.length > 1 && <Filter value={filter} onChange={changeFilter} />}\n\n      {contacts.length > 0 ? (\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      ) : (\n        <p>Your phonebook is empty. Add contact.</p>\n      )}\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__31_5-\",\"listItem\":\"ContactList_listItem__3Wnmj\",\"button\":\"ContactList_button__2B4WK\"};"],"sourceRoot":""}